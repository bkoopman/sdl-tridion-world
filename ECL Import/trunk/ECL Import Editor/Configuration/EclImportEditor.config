<?xml version="1.0"?>
<!-- This is a bare configuration for a Tridion.Web editor -->
<Configuration xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge"
               xmlns:cfg="http://www.sdltridion.com/2009/GUI/Configuration"
               xmlns:ext="http://www.sdltridion.com/2009/GUI/extensions"
               xmlns:cmenu="http://www.sdltridion.com/2009/GUI/extensions/ContextMenu">

    <!--
		The SDL Tridion GUI uses a merging technique to minimize the amount of calls done by the client
		for static files (like .css and .js file).
		The files can be grouped and will be merged per group (if merging is enabled on the group)
		For debugging purposes the merging behavior can be swiched off by setting the merge attribute to false.
	-->
    <resources cache="true">
        <cfg:filters />
        <cfg:extensiongroups />
        <cfg:groups>
            <cfg:group name="Tridion.EclImport.UI.Editor.ThemeFiles" merge="always">
                <cfg:fileset>
                    <cfg:file type="style">{ThemePath}/theme.css</cfg:file>
                </cfg:fileset>
                <cfg:dependencies>
                    <cfg:dependency>Tridion.Web.UI.Editors.CME.Theme</cfg:dependency>
                </cfg:dependencies>
            </cfg:group>

            <cfg:group name="Tridion.EclImport.UI.Editor.CommandFiles" merger="Tridion.Web.UI.Core.Configuration.Resources.CommandGroupProcessor" merge="always">
                <cfg:fileset>
                    <cfg:file type="script">/Scripts/Commands.js</cfg:file>
                    <!-- reference to commandset filegroup -->
                    <cfg:file type="reference">Tridion.EclImport.Core</cfg:file>
                    <cfg:file type="reference">Tridion.EclImport.UI.Editor.CommandSet</cfg:file>
                </cfg:fileset>
                <cfg:dependencies>
                    <!-- Commands are dependend on Tridion.Cme.Command -->
                    <cfg:dependency>Tridion.Web.UI.Editors.CME.commands</cfg:dependency>
                </cfg:dependencies>
            </cfg:group>

            <cfg:group name="Tridion.EclImport.UI.Editor.SiteEditFiles">
                <cfg:domainmodel name="Tridion.EclImport.UI.Editor.SiteEditDomainModelFiles">
                    <cfg:fileset>
                        <cfg:file type="script" id="GUIModifier">/Scripts/SiteEdit.js</cfg:file>
                    </cfg:fileset>
                    <cfg:services />
                </cfg:domainmodel>
            </cfg:group>
        </cfg:groups>

    </resources>
    
    <definitionfiles />
    <!--
		The SDL Tridion GUI allows for additions, manipulations and removal of items within the GUI through
		the 'extension methodology'.

		Below is the configuration section for those extensions.
		These configuration sections can be defined inline or external (if the externaldefinition is used, all
		inline content is ignored!)
	-->
    <extensions>
        <ext:editorextensions>

            <ext:editorextension target="CME">
                <ext:editurls />
                <ext:listdefinitions />
                <ext:itemicons />
                <ext:taskbars />
                <ext:commands/>
                <ext:commandextensions />
                <ext:contextmenus>
                    <ext:add>
                        <ext:extension name="EclImport" assignid="ecl_import" insertbefore="cm_new">
                            <ext:menudeclaration>
                                <cmenu:ContextMenuItem id="ecl_import" name="Import Item..." command="ImportItem" />
                            </ext:menudeclaration>
                            <ext:dependencies>
                                <cfg:dependency>Tridion.EclImport.UI.Editor.ThemeFiles</cfg:dependency>
                                <cfg:dependency>Tridion.EclImport.UI.Editor.CommandFiles</cfg:dependency>
                            </ext:dependencies>
                            <ext:apply>
                                <ext:view name="DashboardView">
                                    <ext:control id="DashboardContextMenu" />
                                </ext:view>
                            </ext:apply>
                        </ext:extension>
                    </ext:add>
                </ext:contextmenus>
                <ext:lists />
                <ext:tabpages />
                <ext:toolbars />
                <ext:ribbontoolbars />
                <ext:extendedareas />
            </ext:editorextension>

            <ext:editorextension target="SiteEdit">
                <ext:editurls />
                <ext:listdefinitions />
                <ext:itemicons />
                <ext:taskbars />
                <ext:commands/>
                <ext:commandextensions />
                <ext:contextmenus />
                <ext:lists />
                <ext:tabpages />
                <ext:toolbars />
                <ext:ribbontoolbars />
                <ext:extendedareas />
            </ext:editorextension>
        </ext:editorextensions>
        <ext:dataextenders />
    </extensions>

    <commands>
        <cfg:commandset id="Tridion.EclImport.UI.Editor.CommandSet">
            <cfg:command name="ImportItem" implementation="Tridion.EclImport.Commands.ImportItem" />
            <cfg:dependencies>
                <cfg:dependency>Tridion.EclImport.UI.Editor.CommandFiles</cfg:dependency>
            </cfg:dependencies>
        </cfg:commandset>
    </commands>

    <contextmenus />

    <localization>
        <cfg:clientresource servertype="Resources.Tridion.ExternalContentLibrary.UI.Editor.Strings, App_GlobalResources" clientname="Tridion.ExternalContentLibrary.Strings" />
    </localization>

    <settings>
        <defaultpage />
        <editurls />
        <listdefinitions/>
        <itemicons />
        <theme>
            <path>/Themes</path>
            <resourcegroup>Tridion.EclImport.UI.Editor.ThemeFiles</resourcegroup>
        </theme>
        <resourceextensions />
        <customconfiguration>
            <clientconfiguration>
                <!-- item id of multimedia schema to use for imported content -->
                <schemaid>8</schemaid>
                <!-- item id of target folder for imports -->
                <folderid>39</folderid>
            </clientconfiguration>
        </customconfiguration>
    </settings>

</Configuration>
